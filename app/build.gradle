plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.android.gms.oss-licenses-plugin'
}

final def keystorePropertiesFile = rootProject.file("keystore.properties")
final def gitCommitHash = { ->
    final def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    stdout.toString().trim()
}

android {
    compileSdkVersion 31

    defaultConfig {
        applicationId "xyz.ivaniskandar.shouko"
        minSdkVersion 29
        targetSdkVersion 31
        versionCode 4
        versionName "0.5.0"
        resConfigs "en"
    }

    buildTypes {
        debug {
            minifyEnabled true
            shrinkResources true
            proguardFiles 'proguard-base.pro', 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles 'proguard-base.pro', 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true

        // Allow use of @OptIn
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    if (keystorePropertiesFile.exists()) {
        def keystoreProperties = new Properties()
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
        signingConfigs {
            debug {
                storeFile rootProject.file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            }
        }
        buildTypes.release.signingConfig signingConfigs.debug
        buildTypes.debug.signingConfig signingConfigs.debug
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.versionNameOverride "$versionName-$gitCommitHash"
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.activity:activity-compose:1.3.0'
    implementation 'androidx.fragment:fragment-ktx:1.3.6'
    implementation "androidx.navigation:navigation-compose:2.4.0-alpha05"
    implementation "androidx.preference:preference-ktx:1.1.1"
    implementation "com.github.topjohnwu.libsu:core:3.1.2"
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'

    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"

    def accompanist_version = "0.15.0"
    implementation "com.google.accompanist:accompanist-insets:$accompanist_version"
    implementation "com.google.accompanist:accompanist-pager:$accompanist_version"
    implementation "com.google.accompanist:accompanist-pager-indicators:$accompanist_version"
    implementation "com.google.accompanist:accompanist-swiperefresh:$accompanist_version"

    def coroutines_version = "1.5.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    def lifecycle_version = "2.3.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-service:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-process:$lifecycle_version"
}
